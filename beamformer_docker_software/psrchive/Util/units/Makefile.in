# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

###########################################################################
#
# Rules for making intermediate header file installation
#
###########################################################################



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = test_Alias$(EXEEXT) test_tostring$(EXEEXT) \
	test_Conventions$(EXEEXT) test_Error$(EXEEXT) \
	test_Configuration$(EXEEXT) test_HeapTracked$(EXEEXT) \
	test_Reference$(EXEEXT) test_circular_Reference$(EXEEXT) \
	test_Registry$(EXEEXT) test_Functor$(EXEEXT) \
	test_Callback$(EXEEXT) test_separate$(EXEEXT) \
	test_TextInterface$(EXEEXT) test_parse_indeces$(EXEEXT) \
	test_TextIndex$(EXEEXT) test_DynamicInterface$(EXEEXT) \
	test_substitute$(EXEEXT) test_escape$(EXEEXT) \
	test_Mueller$(EXEEXT) test_inner_product$(EXEEXT) \
	test_Basis$(EXEEXT) test_Stokes$(EXEEXT) \
	test_Estimate$(EXEEXT) test_Vector$(EXEEXT) \
	test_Matrix$(EXEEXT) test_Jacobi$(EXEEXT) test_eigen$(EXEEXT) \
	test_Jones$(EXEEXT) test_Quaternion$(EXEEXT) \
	test_Pauli$(EXEEXT) test_ModifyRestore$(EXEEXT) \
	test_Dirac$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_1) many_references$(EXEEXT) \
	many_calls$(EXEEXT) benchmark_tostring$(EXEEXT)
noinst_PROGRAMS = generate_PromoteTraits$(EXEEXT)
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/config/Makefile.include
subdir = Util/units
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/ac_python_devel.m4 \
	$(top_srcdir)/config/acx_pthread.m4 \
	$(top_srcdir)/config/best_partial_specialization.m4 \
	$(top_srcdir)/config/bnv_have_qt.m4 \
	$(top_srcdir)/config/cfitsio.m4 \
	$(top_srcdir)/config/compiler.m4 \
	$(top_srcdir)/config/complex_template.m4 \
	$(top_srcdir)/config/crypto.m4 $(top_srcdir)/config/cula.m4 \
	$(top_srcdir)/config/cxxf77.m4 $(top_srcdir)/config/debug.m4 \
	$(top_srcdir)/config/default_partial_specialization.m4 \
	$(top_srcdir)/config/download.m4 \
	$(top_srcdir)/config/etr_socket_nsl.m4 \
	$(top_srcdir)/config/f77.m4 $(top_srcdir)/config/fftw.m4 \
	$(top_srcdir)/config/find.m4 \
	$(top_srcdir)/config/getopt_long.m4 \
	$(top_srcdir)/config/gsl.m4 $(top_srcdir)/config/healpix.m4 \
	$(top_srcdir)/config/ipp.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/libxml.m4 $(top_srcdir)/config/limits.m4 \
	$(top_srcdir)/config/local.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mkl.m4 $(top_srcdir)/config/mpi.m4 \
	$(top_srcdir)/config/optimize.m4 \
	$(top_srcdir)/config/package.m4 $(top_srcdir)/config/pgplot.m4 \
	$(top_srcdir)/config/psrcat.m4 $(top_srcdir)/config/psrxml.m4 \
	$(top_srcdir)/config/puma.m4 $(top_srcdir)/config/qtdriv.m4 \
	$(top_srcdir)/config/readline.m4 \
	$(top_srcdir)/config/tempo2.m4 $(top_srcdir)/config/x11.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libunits_la_LIBADD =
am_libunits_la_OBJECTS = Alias.lo Configuration.lo Conventions.lo \
	Dirac.lo Error.lo Estimate.lo escape.lo FilePtr.lo \
	HeapTracked.lo Identifiable.lo OwnStream.lo pad.lo \
	parse_indeces.lo Pauli.lo random.lo ReferenceAble.lo \
	separate.lo Separator.lo stringcase.lo stringtok.lo \
	tostring.lo TextIndex.lo TextInterface.lo TextInterfaceName.lo \
	TextLoop.lo
libunits_la_OBJECTS = $(am_libunits_la_OBJECTS)
am__EXEEXT_1 = test_Alias$(EXEEXT) test_tostring$(EXEEXT) \
	test_Conventions$(EXEEXT) test_Error$(EXEEXT) \
	test_Configuration$(EXEEXT) test_HeapTracked$(EXEEXT) \
	test_Reference$(EXEEXT) test_circular_Reference$(EXEEXT) \
	test_Registry$(EXEEXT) test_Functor$(EXEEXT) \
	test_Callback$(EXEEXT) test_separate$(EXEEXT) \
	test_TextInterface$(EXEEXT) test_parse_indeces$(EXEEXT) \
	test_TextIndex$(EXEEXT) test_DynamicInterface$(EXEEXT) \
	test_substitute$(EXEEXT) test_escape$(EXEEXT) \
	test_Mueller$(EXEEXT) test_inner_product$(EXEEXT) \
	test_Basis$(EXEEXT) test_Stokes$(EXEEXT) \
	test_Estimate$(EXEEXT) test_Vector$(EXEEXT) \
	test_Matrix$(EXEEXT) test_Jacobi$(EXEEXT) test_eigen$(EXEEXT) \
	test_Jones$(EXEEXT) test_Quaternion$(EXEEXT) \
	test_Pauli$(EXEEXT) test_ModifyRestore$(EXEEXT) \
	test_Dirac$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_benchmark_tostring_OBJECTS = benchmark_tostring.$(OBJEXT)
benchmark_tostring_OBJECTS = $(am_benchmark_tostring_OBJECTS)
benchmark_tostring_LDADD = $(LDADD)
benchmark_tostring_DEPENDENCIES = libunits.la
am_generate_PromoteTraits_OBJECTS = generate_PromoteTraits.$(OBJEXT)
generate_PromoteTraits_OBJECTS = $(am_generate_PromoteTraits_OBJECTS)
generate_PromoteTraits_DEPENDENCIES =
am_many_calls_OBJECTS = many_calls.$(OBJEXT)
many_calls_OBJECTS = $(am_many_calls_OBJECTS)
many_calls_LDADD = $(LDADD)
many_calls_DEPENDENCIES = libunits.la
am_many_references_OBJECTS = many_references.$(OBJEXT)
many_references_OBJECTS = $(am_many_references_OBJECTS)
many_references_LDADD = $(LDADD)
many_references_DEPENDENCIES = libunits.la
am_test_Alias_OBJECTS = test_Alias.$(OBJEXT)
test_Alias_OBJECTS = $(am_test_Alias_OBJECTS)
test_Alias_LDADD = $(LDADD)
test_Alias_DEPENDENCIES = libunits.la
am_test_Basis_OBJECTS = test_Basis.$(OBJEXT)
test_Basis_OBJECTS = $(am_test_Basis_OBJECTS)
test_Basis_LDADD = $(LDADD)
test_Basis_DEPENDENCIES = libunits.la
am_test_Callback_OBJECTS = test_Callback.$(OBJEXT)
test_Callback_OBJECTS = $(am_test_Callback_OBJECTS)
test_Callback_LDADD = $(LDADD)
test_Callback_DEPENDENCIES = libunits.la
am_test_Configuration_OBJECTS = test_Configuration.$(OBJEXT)
test_Configuration_OBJECTS = $(am_test_Configuration_OBJECTS)
test_Configuration_LDADD = $(LDADD)
test_Configuration_DEPENDENCIES = libunits.la
am_test_Conventions_OBJECTS = test_Conventions.$(OBJEXT)
test_Conventions_OBJECTS = $(am_test_Conventions_OBJECTS)
test_Conventions_LDADD = $(LDADD)
test_Conventions_DEPENDENCIES = libunits.la
am_test_Dirac_OBJECTS = test_Dirac.$(OBJEXT)
test_Dirac_OBJECTS = $(am_test_Dirac_OBJECTS)
test_Dirac_LDADD = $(LDADD)
test_Dirac_DEPENDENCIES = libunits.la
am_test_DynamicInterface_OBJECTS = test_DynamicInterface.$(OBJEXT)
test_DynamicInterface_OBJECTS = $(am_test_DynamicInterface_OBJECTS)
test_DynamicInterface_LDADD = $(LDADD)
test_DynamicInterface_DEPENDENCIES = libunits.la
am_test_Error_OBJECTS = test_Error.$(OBJEXT)
test_Error_OBJECTS = $(am_test_Error_OBJECTS)
test_Error_LDADD = $(LDADD)
test_Error_DEPENDENCIES = libunits.la
am_test_Estimate_OBJECTS = test_Estimate.$(OBJEXT)
test_Estimate_OBJECTS = $(am_test_Estimate_OBJECTS)
test_Estimate_LDADD = $(LDADD)
test_Estimate_DEPENDENCIES = libunits.la
am_test_Functor_OBJECTS = test_Functor.$(OBJEXT)
test_Functor_OBJECTS = $(am_test_Functor_OBJECTS)
test_Functor_LDADD = $(LDADD)
test_Functor_DEPENDENCIES = libunits.la
am_test_HeapTracked_OBJECTS = test_HeapTracked.$(OBJEXT)
test_HeapTracked_OBJECTS = $(am_test_HeapTracked_OBJECTS)
test_HeapTracked_LDADD = $(LDADD)
test_HeapTracked_DEPENDENCIES = libunits.la
am_test_Jacobi_OBJECTS = test_Jacobi.$(OBJEXT)
test_Jacobi_OBJECTS = $(am_test_Jacobi_OBJECTS)
test_Jacobi_LDADD = $(LDADD)
test_Jacobi_DEPENDENCIES = libunits.la
am_test_Jones_OBJECTS = test_Jones.$(OBJEXT)
test_Jones_OBJECTS = $(am_test_Jones_OBJECTS)
test_Jones_LDADD = $(LDADD)
test_Jones_DEPENDENCIES = libunits.la
am_test_Matrix_OBJECTS = test_Matrix.$(OBJEXT)
test_Matrix_OBJECTS = $(am_test_Matrix_OBJECTS)
test_Matrix_LDADD = $(LDADD)
test_Matrix_DEPENDENCIES = libunits.la
am_test_ModifyRestore_OBJECTS = test_ModifyRestore.$(OBJEXT)
test_ModifyRestore_OBJECTS = $(am_test_ModifyRestore_OBJECTS)
test_ModifyRestore_LDADD = $(LDADD)
test_ModifyRestore_DEPENDENCIES = libunits.la
am_test_Mueller_OBJECTS = test_Mueller.$(OBJEXT)
test_Mueller_OBJECTS = $(am_test_Mueller_OBJECTS)
test_Mueller_LDADD = $(LDADD)
test_Mueller_DEPENDENCIES = libunits.la
am_test_Pauli_OBJECTS = test_Pauli.$(OBJEXT)
test_Pauli_OBJECTS = $(am_test_Pauli_OBJECTS)
test_Pauli_LDADD = $(LDADD)
test_Pauli_DEPENDENCIES = libunits.la
am_test_Quaternion_OBJECTS = test_Quaternion.$(OBJEXT)
test_Quaternion_OBJECTS = $(am_test_Quaternion_OBJECTS)
test_Quaternion_LDADD = $(LDADD)
test_Quaternion_DEPENDENCIES = libunits.la
am_test_Reference_OBJECTS = test_Reference.$(OBJEXT)
test_Reference_OBJECTS = $(am_test_Reference_OBJECTS)
test_Reference_LDADD = $(LDADD)
test_Reference_DEPENDENCIES = libunits.la
am_test_Registry_OBJECTS = test_Registry.$(OBJEXT)
test_Registry_OBJECTS = $(am_test_Registry_OBJECTS)
test_Registry_LDADD = $(LDADD)
test_Registry_DEPENDENCIES = libunits.la
am_test_Stokes_OBJECTS = test_Stokes.$(OBJEXT)
test_Stokes_OBJECTS = $(am_test_Stokes_OBJECTS)
test_Stokes_LDADD = $(LDADD)
test_Stokes_DEPENDENCIES = libunits.la
am_test_TextIndex_OBJECTS = test_TextIndex.$(OBJEXT)
test_TextIndex_OBJECTS = $(am_test_TextIndex_OBJECTS)
test_TextIndex_LDADD = $(LDADD)
test_TextIndex_DEPENDENCIES = libunits.la
am_test_TextInterface_OBJECTS = test_TextInterface.$(OBJEXT)
test_TextInterface_OBJECTS = $(am_test_TextInterface_OBJECTS)
test_TextInterface_LDADD = $(LDADD)
test_TextInterface_DEPENDENCIES = libunits.la
am_test_Vector_OBJECTS = test_Vector.$(OBJEXT)
test_Vector_OBJECTS = $(am_test_Vector_OBJECTS)
test_Vector_LDADD = $(LDADD)
test_Vector_DEPENDENCIES = libunits.la
am_test_circular_Reference_OBJECTS =  \
	test_circular_Reference.$(OBJEXT)
test_circular_Reference_OBJECTS =  \
	$(am_test_circular_Reference_OBJECTS)
test_circular_Reference_LDADD = $(LDADD)
test_circular_Reference_DEPENDENCIES = libunits.la
am_test_eigen_OBJECTS = test_eigen.$(OBJEXT)
test_eigen_OBJECTS = $(am_test_eigen_OBJECTS)
test_eigen_LDADD = $(LDADD)
test_eigen_DEPENDENCIES = libunits.la
am_test_escape_OBJECTS = test_escape.$(OBJEXT)
test_escape_OBJECTS = $(am_test_escape_OBJECTS)
test_escape_LDADD = $(LDADD)
test_escape_DEPENDENCIES = libunits.la
am_test_inner_product_OBJECTS = test_inner_product.$(OBJEXT)
test_inner_product_OBJECTS = $(am_test_inner_product_OBJECTS)
test_inner_product_LDADD = $(LDADD)
test_inner_product_DEPENDENCIES = libunits.la
am_test_parse_indeces_OBJECTS = test_parse_indeces.$(OBJEXT)
test_parse_indeces_OBJECTS = $(am_test_parse_indeces_OBJECTS)
test_parse_indeces_LDADD = $(LDADD)
test_parse_indeces_DEPENDENCIES = libunits.la
am_test_separate_OBJECTS = test_separate.$(OBJEXT)
test_separate_OBJECTS = $(am_test_separate_OBJECTS)
test_separate_LDADD = $(LDADD)
test_separate_DEPENDENCIES = libunits.la
am_test_substitute_OBJECTS = test_substitute.$(OBJEXT)
test_substitute_OBJECTS = $(am_test_substitute_OBJECTS)
test_substitute_LDADD = $(LDADD)
test_substitute_DEPENDENCIES = libunits.la
am_test_tostring_OBJECTS = test_tostring.$(OBJEXT)
test_tostring_OBJECTS = $(am_test_tostring_OBJECTS)
test_tostring_LDADD = $(LDADD)
test_tostring_DEPENDENCIES = libunits.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libunits_la_SOURCES) $(benchmark_tostring_SOURCES) \
	$(generate_PromoteTraits_SOURCES) $(many_calls_SOURCES) \
	$(many_references_SOURCES) $(test_Alias_SOURCES) \
	$(test_Basis_SOURCES) $(test_Callback_SOURCES) \
	$(test_Configuration_SOURCES) $(test_Conventions_SOURCES) \
	$(test_Dirac_SOURCES) $(test_DynamicInterface_SOURCES) \
	$(test_Error_SOURCES) $(test_Estimate_SOURCES) \
	$(test_Functor_SOURCES) $(test_HeapTracked_SOURCES) \
	$(test_Jacobi_SOURCES) $(test_Jones_SOURCES) \
	$(test_Matrix_SOURCES) $(test_ModifyRestore_SOURCES) \
	$(test_Mueller_SOURCES) $(test_Pauli_SOURCES) \
	$(test_Quaternion_SOURCES) $(test_Reference_SOURCES) \
	$(test_Registry_SOURCES) $(test_Stokes_SOURCES) \
	$(test_TextIndex_SOURCES) $(test_TextInterface_SOURCES) \
	$(test_Vector_SOURCES) $(test_circular_Reference_SOURCES) \
	$(test_eigen_SOURCES) $(test_escape_SOURCES) \
	$(test_inner_product_SOURCES) $(test_parse_indeces_SOURCES) \
	$(test_separate_SOURCES) $(test_substitute_SOURCES) \
	$(test_tostring_SOURCES)
DIST_SOURCES = $(libunits_la_SOURCES) $(benchmark_tostring_SOURCES) \
	$(generate_PromoteTraits_SOURCES) $(many_calls_SOURCES) \
	$(many_references_SOURCES) $(test_Alias_SOURCES) \
	$(test_Basis_SOURCES) $(test_Callback_SOURCES) \
	$(test_Configuration_SOURCES) $(test_Conventions_SOURCES) \
	$(test_Dirac_SOURCES) $(test_DynamicInterface_SOURCES) \
	$(test_Error_SOURCES) $(test_Estimate_SOURCES) \
	$(test_Functor_SOURCES) $(test_HeapTracked_SOURCES) \
	$(test_Jacobi_SOURCES) $(test_Jones_SOURCES) \
	$(test_Matrix_SOURCES) $(test_ModifyRestore_SOURCES) \
	$(test_Mueller_SOURCES) $(test_Pauli_SOURCES) \
	$(test_Quaternion_SOURCES) $(test_Reference_SOURCES) \
	$(test_Registry_SOURCES) $(test_Stokes_SOURCES) \
	$(test_TextIndex_SOURCES) $(test_TextInterface_SOURCES) \
	$(test_Vector_SOURCES) $(test_circular_Reference_SOURCES) \
	$(test_eigen_SOURCES) $(test_escape_SOURCES) \
	$(test_inner_product_SOURCES) $(test_parse_indeces_SOURCES) \
	$(test_separate_SOURCES) $(test_substitute_SOURCES) \
	$(test_tostring_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"
HEADERS = $(include_HEADERS) $(nodist_include_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFITSIO_CFLAGS = @CFITSIO_CFLAGS@
CFITSIO_LIBS = @CFITSIO_LIBS@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CULA_CFLAGS = @CULA_CFLAGS@
CULA_LIBS = @CULA_LIBS@
CURL = @CURL@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FFTW_CFLAGS = @FFTW_CFLAGS@
FFTW_LIBS = @FFTW_LIBS@
FFT_CFLAGS = @FFT_CFLAGS@
FFT_LIBS = @FFT_LIBS@
FGREP = @FGREP@
FLIBS = @FLIBS@
GREP = @GREP@
GSL_CFLAGS = @GSL_CFLAGS@
GSL_CONFIG = @GSL_CONFIG@
GSL_LIBS = @GSL_LIBS@
HEALPIX_CFLAGS = @HEALPIX_CFLAGS@
HEALPIX_LIBS = @HEALPIX_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IPP_CFLAGS = @IPP_CFLAGS@
IPP_LIBS = @IPP_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOGIN_ARCH = @LOGIN_ARCH@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKL_CFLAGS = @MKL_CFLAGS@
MKL_LIBS = @MKL_LIBS@
MPI_CFLAGS = @MPI_CFLAGS@
MPI_LIBS = @MPI_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENSSL_LIBS = @OPENSSL_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGES = @PACKAGES@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PGPLOT_CFLAGS = @PGPLOT_CFLAGS@
PGPLOT_DIR = @PGPLOT_DIR@
PGPLOT_LIBS = @PGPLOT_LIBS@
PSRCHIVE_HTTP = @PSRCHIVE_HTTP@
PSRCHIVE_INSTALL = @PSRCHIVE_INSTALL@
PSRHOME = @PSRHOME@
PSRXML_CFLAGS = @PSRXML_CFLAGS@
PSRXML_LIBS = @PSRXML_LIBS@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PUMA_CFLAGS = @PUMA_CFLAGS@
PUMA_LIBS = @PUMA_LIBS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION = @PYTHON_VERSION@
QTDRIV_CFLAGS = @QTDRIV_CFLAGS@
QTDRIV_LIBS = @QTDRIV_LIBS@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_DIR = @QT_DIR@
QT_LIBS = @QT_LIBS@
QT_MOC = @QT_MOC@
QT_UIC = @QT_UIC@
RANLIB = @RANLIB@
READLINE_CFLAGS = @READLINE_CFLAGS@
READLINE_LIBS = @READLINE_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOCKET_LIBS = @SOCKET_LIBS@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIG_PYTHON_CPPFLAGS = @SWIG_PYTHON_CPPFLAGS@
SWIG_PYTHON_OPT = @SWIG_PYTHON_OPT@
TEMPO2_CFLAGS = @TEMPO2_CFLAGS@
TEMPO2_LIBS = @TEMPO2_LIBS@
VERSION = @VERSION@
WGET = @WGET@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
download = @download@
dvidir = @dvidir@
enable_shared = @enable_shared@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LTLIBRARIES = libunits.la
include_HEADERS = \
	Alias.h \
        Basis.h \
        Callback.h \
        Cloude.h \
        complex_promote.h \
	complex_public.h \
        Configuration.h \
        Conventions.h \
	debug.h \
	Dirac.h \
        Error.h \
	escape.h \
        Estimate.h \
        EstimateStats.h \
	Factory.h \
	file_cast.h \
	FilePtr.h \
        Functor.h \
        HeapTracked.h \
	identifiable_factory.h \
	Identifiable.h \
	interface_factory.h \
	interface_stream.h \
        Jacobi.h \
        Jones.h \
	lazy.h \
        Matrix.h \
	Minkowski.h \
        ModifyRestore.h \
	NestedTextInterface.h \
	OwnStream.h \
        pad.h \
        Pauli.h \
        Quaternion.h \
        random.h \
        ReferenceAble.h \
        Reference.h \
        ReferenceTo.h \
	ReferenceVector.h \
        Registry.h \
        separate.h \
	Separator.h \
        Stokes.h \
	stringcase.h \
        stringtok.h \
        substitute.h \
	TextEditor.h \
	TextIndex.h \
        TextInterface.h \
	TextInterfaceAdapter.h \
	TextInterfaceAttribute.h \
	TextInterfaceElement.h \
	TextInterfaceEmbed.h \
	TextInterfaceInterpreter.h \
	TextInterfaceName.h \
	TextInterfaceParser.h \
	TextInterfaceProxy.h \
	TextInterfaceTo.h \
	TextInterfaceValue.h \
	TextLoop.h \
        tostring.h \
        Traits.h \
        Vector.h

libunits_la_SOURCES = \
	Alias.C \
        Configuration.C \
        Conventions.C \
	Dirac.C \
        Error.C \
	Estimate.C \
	escape.C \
	FilePtr.C \
        HeapTracked.C \
	Identifiable.C \
	OwnStream.C \
        pad.C \
	parse_indeces.C \
        Pauli.C \
	random.C \
        ReferenceAble.C \
        separate.C \
	Separator.C \
	stringcase.C \
        stringtok.C \
	test.cfg \
	tostring.C \
	TextIndex.C \
        TextInterface.C \
	TextInterfaceName.C \
	TextLoop.C

EXTRA_DIST = header_PromoteTraits MatrixTest.h

# This header file is generated by generate_PromoteTraits.C
nodist_include_HEADERS = PromoteTraits.h
test_Alias_SOURCES = test_Alias.C
test_tostring_SOURCES = test_tostring.C
test_Conventions_SOURCES = test_Conventions.C
test_Error_SOURCES = test_Error.C
test_Configuration_SOURCES = test_Configuration.C
test_HeapTracked_SOURCES = test_HeapTracked.C
test_Reference_SOURCES = test_Reference.C
test_circular_Reference_SOURCES = test_circular_Reference.C
test_Registry_SOURCES = test_Registry.C
test_Functor_SOURCES = test_Functor.C
test_Callback_SOURCES = test_Callback.C
test_separate_SOURCES = test_separate.C
test_substitute_SOURCES = test_substitute.C
test_escape_SOURCES = test_escape.C
test_Estimate_SOURCES = test_Estimate.C
test_Vector_SOURCES = test_Vector.C
test_Matrix_SOURCES = test_Matrix.C
test_Jacobi_SOURCES = test_Jacobi.C
test_eigen_SOURCES = test_eigen.C
test_Jones_SOURCES = test_Jones.C
test_Quaternion_SOURCES = test_Quaternion.C
test_Pauli_SOURCES = test_Pauli.C
test_Dirac_SOURCES = test_Dirac.C
test_Basis_SOURCES = test_Basis.C
test_Stokes_SOURCES = test_Stokes.C
test_TextInterface_SOURCES = test_TextInterface.C
test_DynamicInterface_SOURCES = test_DynamicInterface.C
test_parse_indeces_SOURCES = test_parse_indeces.C
test_TextIndex_SOURCES = test_TextIndex.C
test_ModifyRestore_SOURCES = test_ModifyRestore.C
test_Mueller_SOURCES = test_Mueller.C
test_inner_product_SOURCES = test_inner_product.C 
many_references_SOURCES = many_references.C
many_calls_SOURCES = many_calls.C
benchmark_tostring_SOURCES = benchmark_tostring.C
BUILT_SOURCES = PromoteTraits.h
generate_PromoteTraits_SOURCES = generate_PromoteTraits.C
generate_PromoteTraits_LDADD = 

#############################################################################
#
LDADD = libunits.la
local_includedir = $(top_builddir)/local_include
LOCAL_INCLUDE = $(addprefix $(local_includedir)/, $(HEADERS))
CLEANFILES = $(LOCAL_INCLUDE) $(MOC_SOURCES) $(BUILT_SOURCES)
AM_CPPFLAGS = -I$(local_includedir) $(INCLUDE_CPPFLAGS)
AM_LDFLAGS = $(INCLUDE_LDFLAGS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .C .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Util/units/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Util/units/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libunits.la: $(libunits_la_OBJECTS) $(libunits_la_DEPENDENCIES) 
	$(CXXLINK)  $(libunits_la_OBJECTS) $(libunits_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
benchmark_tostring$(EXEEXT): $(benchmark_tostring_OBJECTS) $(benchmark_tostring_DEPENDENCIES) 
	@rm -f benchmark_tostring$(EXEEXT)
	$(CXXLINK) $(benchmark_tostring_OBJECTS) $(benchmark_tostring_LDADD) $(LIBS)
generate_PromoteTraits$(EXEEXT): $(generate_PromoteTraits_OBJECTS) $(generate_PromoteTraits_DEPENDENCIES) 
	@rm -f generate_PromoteTraits$(EXEEXT)
	$(CXXLINK) $(generate_PromoteTraits_OBJECTS) $(generate_PromoteTraits_LDADD) $(LIBS)
many_calls$(EXEEXT): $(many_calls_OBJECTS) $(many_calls_DEPENDENCIES) 
	@rm -f many_calls$(EXEEXT)
	$(CXXLINK) $(many_calls_OBJECTS) $(many_calls_LDADD) $(LIBS)
many_references$(EXEEXT): $(many_references_OBJECTS) $(many_references_DEPENDENCIES) 
	@rm -f many_references$(EXEEXT)
	$(CXXLINK) $(many_references_OBJECTS) $(many_references_LDADD) $(LIBS)
test_Alias$(EXEEXT): $(test_Alias_OBJECTS) $(test_Alias_DEPENDENCIES) 
	@rm -f test_Alias$(EXEEXT)
	$(CXXLINK) $(test_Alias_OBJECTS) $(test_Alias_LDADD) $(LIBS)
test_Basis$(EXEEXT): $(test_Basis_OBJECTS) $(test_Basis_DEPENDENCIES) 
	@rm -f test_Basis$(EXEEXT)
	$(CXXLINK) $(test_Basis_OBJECTS) $(test_Basis_LDADD) $(LIBS)
test_Callback$(EXEEXT): $(test_Callback_OBJECTS) $(test_Callback_DEPENDENCIES) 
	@rm -f test_Callback$(EXEEXT)
	$(CXXLINK) $(test_Callback_OBJECTS) $(test_Callback_LDADD) $(LIBS)
test_Configuration$(EXEEXT): $(test_Configuration_OBJECTS) $(test_Configuration_DEPENDENCIES) 
	@rm -f test_Configuration$(EXEEXT)
	$(CXXLINK) $(test_Configuration_OBJECTS) $(test_Configuration_LDADD) $(LIBS)
test_Conventions$(EXEEXT): $(test_Conventions_OBJECTS) $(test_Conventions_DEPENDENCIES) 
	@rm -f test_Conventions$(EXEEXT)
	$(CXXLINK) $(test_Conventions_OBJECTS) $(test_Conventions_LDADD) $(LIBS)
test_Dirac$(EXEEXT): $(test_Dirac_OBJECTS) $(test_Dirac_DEPENDENCIES) 
	@rm -f test_Dirac$(EXEEXT)
	$(CXXLINK) $(test_Dirac_OBJECTS) $(test_Dirac_LDADD) $(LIBS)
test_DynamicInterface$(EXEEXT): $(test_DynamicInterface_OBJECTS) $(test_DynamicInterface_DEPENDENCIES) 
	@rm -f test_DynamicInterface$(EXEEXT)
	$(CXXLINK) $(test_DynamicInterface_OBJECTS) $(test_DynamicInterface_LDADD) $(LIBS)
test_Error$(EXEEXT): $(test_Error_OBJECTS) $(test_Error_DEPENDENCIES) 
	@rm -f test_Error$(EXEEXT)
	$(CXXLINK) $(test_Error_OBJECTS) $(test_Error_LDADD) $(LIBS)
test_Estimate$(EXEEXT): $(test_Estimate_OBJECTS) $(test_Estimate_DEPENDENCIES) 
	@rm -f test_Estimate$(EXEEXT)
	$(CXXLINK) $(test_Estimate_OBJECTS) $(test_Estimate_LDADD) $(LIBS)
test_Functor$(EXEEXT): $(test_Functor_OBJECTS) $(test_Functor_DEPENDENCIES) 
	@rm -f test_Functor$(EXEEXT)
	$(CXXLINK) $(test_Functor_OBJECTS) $(test_Functor_LDADD) $(LIBS)
test_HeapTracked$(EXEEXT): $(test_HeapTracked_OBJECTS) $(test_HeapTracked_DEPENDENCIES) 
	@rm -f test_HeapTracked$(EXEEXT)
	$(CXXLINK) $(test_HeapTracked_OBJECTS) $(test_HeapTracked_LDADD) $(LIBS)
test_Jacobi$(EXEEXT): $(test_Jacobi_OBJECTS) $(test_Jacobi_DEPENDENCIES) 
	@rm -f test_Jacobi$(EXEEXT)
	$(CXXLINK) $(test_Jacobi_OBJECTS) $(test_Jacobi_LDADD) $(LIBS)
test_Jones$(EXEEXT): $(test_Jones_OBJECTS) $(test_Jones_DEPENDENCIES) 
	@rm -f test_Jones$(EXEEXT)
	$(CXXLINK) $(test_Jones_OBJECTS) $(test_Jones_LDADD) $(LIBS)
test_Matrix$(EXEEXT): $(test_Matrix_OBJECTS) $(test_Matrix_DEPENDENCIES) 
	@rm -f test_Matrix$(EXEEXT)
	$(CXXLINK) $(test_Matrix_OBJECTS) $(test_Matrix_LDADD) $(LIBS)
test_ModifyRestore$(EXEEXT): $(test_ModifyRestore_OBJECTS) $(test_ModifyRestore_DEPENDENCIES) 
	@rm -f test_ModifyRestore$(EXEEXT)
	$(CXXLINK) $(test_ModifyRestore_OBJECTS) $(test_ModifyRestore_LDADD) $(LIBS)
test_Mueller$(EXEEXT): $(test_Mueller_OBJECTS) $(test_Mueller_DEPENDENCIES) 
	@rm -f test_Mueller$(EXEEXT)
	$(CXXLINK) $(test_Mueller_OBJECTS) $(test_Mueller_LDADD) $(LIBS)
test_Pauli$(EXEEXT): $(test_Pauli_OBJECTS) $(test_Pauli_DEPENDENCIES) 
	@rm -f test_Pauli$(EXEEXT)
	$(CXXLINK) $(test_Pauli_OBJECTS) $(test_Pauli_LDADD) $(LIBS)
test_Quaternion$(EXEEXT): $(test_Quaternion_OBJECTS) $(test_Quaternion_DEPENDENCIES) 
	@rm -f test_Quaternion$(EXEEXT)
	$(CXXLINK) $(test_Quaternion_OBJECTS) $(test_Quaternion_LDADD) $(LIBS)
test_Reference$(EXEEXT): $(test_Reference_OBJECTS) $(test_Reference_DEPENDENCIES) 
	@rm -f test_Reference$(EXEEXT)
	$(CXXLINK) $(test_Reference_OBJECTS) $(test_Reference_LDADD) $(LIBS)
test_Registry$(EXEEXT): $(test_Registry_OBJECTS) $(test_Registry_DEPENDENCIES) 
	@rm -f test_Registry$(EXEEXT)
	$(CXXLINK) $(test_Registry_OBJECTS) $(test_Registry_LDADD) $(LIBS)
test_Stokes$(EXEEXT): $(test_Stokes_OBJECTS) $(test_Stokes_DEPENDENCIES) 
	@rm -f test_Stokes$(EXEEXT)
	$(CXXLINK) $(test_Stokes_OBJECTS) $(test_Stokes_LDADD) $(LIBS)
test_TextIndex$(EXEEXT): $(test_TextIndex_OBJECTS) $(test_TextIndex_DEPENDENCIES) 
	@rm -f test_TextIndex$(EXEEXT)
	$(CXXLINK) $(test_TextIndex_OBJECTS) $(test_TextIndex_LDADD) $(LIBS)
test_TextInterface$(EXEEXT): $(test_TextInterface_OBJECTS) $(test_TextInterface_DEPENDENCIES) 
	@rm -f test_TextInterface$(EXEEXT)
	$(CXXLINK) $(test_TextInterface_OBJECTS) $(test_TextInterface_LDADD) $(LIBS)
test_Vector$(EXEEXT): $(test_Vector_OBJECTS) $(test_Vector_DEPENDENCIES) 
	@rm -f test_Vector$(EXEEXT)
	$(CXXLINK) $(test_Vector_OBJECTS) $(test_Vector_LDADD) $(LIBS)
test_circular_Reference$(EXEEXT): $(test_circular_Reference_OBJECTS) $(test_circular_Reference_DEPENDENCIES) 
	@rm -f test_circular_Reference$(EXEEXT)
	$(CXXLINK) $(test_circular_Reference_OBJECTS) $(test_circular_Reference_LDADD) $(LIBS)
test_eigen$(EXEEXT): $(test_eigen_OBJECTS) $(test_eigen_DEPENDENCIES) 
	@rm -f test_eigen$(EXEEXT)
	$(CXXLINK) $(test_eigen_OBJECTS) $(test_eigen_LDADD) $(LIBS)
test_escape$(EXEEXT): $(test_escape_OBJECTS) $(test_escape_DEPENDENCIES) 
	@rm -f test_escape$(EXEEXT)
	$(CXXLINK) $(test_escape_OBJECTS) $(test_escape_LDADD) $(LIBS)
test_inner_product$(EXEEXT): $(test_inner_product_OBJECTS) $(test_inner_product_DEPENDENCIES) 
	@rm -f test_inner_product$(EXEEXT)
	$(CXXLINK) $(test_inner_product_OBJECTS) $(test_inner_product_LDADD) $(LIBS)
test_parse_indeces$(EXEEXT): $(test_parse_indeces_OBJECTS) $(test_parse_indeces_DEPENDENCIES) 
	@rm -f test_parse_indeces$(EXEEXT)
	$(CXXLINK) $(test_parse_indeces_OBJECTS) $(test_parse_indeces_LDADD) $(LIBS)
test_separate$(EXEEXT): $(test_separate_OBJECTS) $(test_separate_DEPENDENCIES) 
	@rm -f test_separate$(EXEEXT)
	$(CXXLINK) $(test_separate_OBJECTS) $(test_separate_LDADD) $(LIBS)
test_substitute$(EXEEXT): $(test_substitute_OBJECTS) $(test_substitute_DEPENDENCIES) 
	@rm -f test_substitute$(EXEEXT)
	$(CXXLINK) $(test_substitute_OBJECTS) $(test_substitute_LDADD) $(LIBS)
test_tostring$(EXEEXT): $(test_tostring_OBJECTS) $(test_tostring_DEPENDENCIES) 
	@rm -f test_tostring$(EXEEXT)
	$(CXXLINK) $(test_tostring_OBJECTS) $(test_tostring_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Alias.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Configuration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Conventions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Dirac.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Estimate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FilePtr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HeapTracked.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Identifiable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OwnStream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Pauli.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReferenceAble.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Separator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TextIndex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TextInterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TextInterfaceName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TextLoop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/benchmark_tostring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/escape.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generate_PromoteTraits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/many_calls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/many_references.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pad.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parse_indeces.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/separate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stringcase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stringtok.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Alias.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Basis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Callback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Conventions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Dirac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_DynamicInterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Estimate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Functor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_HeapTracked.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Jacobi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Jones.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ModifyRestore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Mueller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Pauli.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Quaternion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Reference.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Registry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Stokes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_TextIndex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_TextInterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_circular_Reference.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_eigen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_escape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_inner_product.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_parse_indeces.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_separate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_substitute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_tostring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tostring.Plo@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS install-nodist_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-nodist_includeHEADERS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-TESTS check-am \
	clean clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-man install-nodist_includeHEADERS \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-nodist_includeHEADERS


# ######################################################################
#
# Rule to generate PromoteTraits.h
#

PromoteTraits.h: $(srcdir)/header_PromoteTraits ./generate_PromoteTraits
	cp $(srcdir)/header_PromoteTraits PromoteTraits.h
	chmod u+w PromoteTraits.h
	./generate_PromoteTraits

# Depend on constructed include files
Error.lo: PromoteTraits.h

all-local: $(LOCAL_INCLUDE)

$(LOCAL_INCLUDE) : $(local_includedir)/% : %
	@$(SHELL) $(top_srcdir)/config/install-intermediate $< $@

###########################################################################
#
# Rules for making PDF from LaTeX
#
###########################################################################

#
# convert Postscript to Abobe Acrobat Portable Document Format
#
%.pdf: %.ps
	ps2pdf $<

#
# convert dvi file format to Postscript using Adobe safe ligatures
#
%.ps: %.dvi
	dvips -Ppdf -G0 -o $@ $<

#
# generate dvi file from LaTeX input
#
%.dvi: $(srcdir)/%.tex
# Get new refs
	latex $<
# Generate tex for em
	bibtex $* ; date
# Tell latex about them
	latex $<
# Second pass to fix cross-references
	latex $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
