# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

###########################################################################
#
# Rules for making intermediate header file installation
#
###########################################################################

###########################################################################
#
# Rules for CUDA
#
###########################################################################



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = dmsmear$(EXEEXT) digitxt$(EXEEXT) digimon$(EXEEXT) \
	digihist$(EXEEXT) filterbank_speed$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) $(am__EXEEXT_6)
@HAVE_CUFFT_TRUE@am__append_1 = CUFFTError.h dsp/LaunchConfig.h \
@HAVE_CUFFT_TRUE@  dsp/FilterbankCUDA.h dsp/filterbank_cuda.h \
@HAVE_CUFFT_TRUE@  dsp/TransferCUDA.h dsp/TransferBitSeriesCUDA.h \
@HAVE_CUFFT_TRUE@  dsp/SKMaskerCUDA.h dsp/DetectionCUDA.h dsp/FZoomCUDA.h \
@HAVE_CUFFT_TRUE@  dsp/FScrunchCUDA.h dsp/TScrunchCUDA.h \
@HAVE_CUFFT_TRUE@  dsp/PScrunchCUDA.h dsp/PolnSelectCUDA.h \
@HAVE_CUFFT_TRUE@  dsp/ConvolutionCUDA.h dsp/ConvolutionCUDASpectral.h \
@HAVE_CUFFT_TRUE@  dsp/ConvolutionCUDACallbacks.h dsp/SpectralKurtosisCUDA.h \
@HAVE_CUFFT_TRUE@  dsp/SKComputerCUDA.h dsp/SKDetectorCUDA.h dsp/SKFilterbankCUDA.h

@HAVE_CUFFT_TRUE@am__append_2 = CUFFTError.C LaunchConfig.C FilterbankCUDA.cu \
@HAVE_CUFFT_TRUE@  TransferCUDA.C TransferBitSeriesCUDA.C DetectionCUDA.cu             \
@HAVE_CUFFT_TRUE@  SKMaskerCUDA.cu FZoomCUDA.cu FScrunchCUDA.cu TScrunchCUDA.cu        \
@HAVE_CUFFT_TRUE@  PScrunchCUDA.cu PolnSelectCUDA.cu SpectralKurtosisCUDA.cu \
@HAVE_CUFFT_TRUE@  SKComputerCUDA.cu SKDetectorCUDA.cu SKFilterbankCUDA.cu \
@HAVE_CUFFT_TRUE@  ConvolutionCUDA.cu ConvolutionCUDASpectral.cu ConvolutionCUDACallbacks.cu

@HAVE_CUFFT_TRUE@am__append_3 = fftbatch_speed
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@am__append_4 = cufft_callback_bench
check_PROGRAMS = test_PolnCalibration$(EXEEXT) \
	test_OptimalFFT$(EXEEXT)
@HAVE_PGPLOT_TRUE@am__append_5 = ExcisionStatsPlotter.C BitStatsPlotter.C
@HAVE_PGPLOT_TRUE@am__append_6 = digistat passband
@HAVE_fits_TRUE@am__append_7 = dsp/LoadToFITS.h dsp/LoadToFITSN.h
@HAVE_fits_TRUE@am__append_8 = LoadToFITS.C LoadToFITSN.C
@HAVE_fits_TRUE@am__append_9 = digifits
@HAVE_sigproc_TRUE@am__append_10 = dsp/LoadToFil.h dsp/LoadToFilN.h
@HAVE_sigproc_TRUE@am__append_11 = LoadToFil.C LoadToFilN.C
@HAVE_sigproc_TRUE@am__append_12 = digifil
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@am__append_13 = the_decimator
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@am__append_14 = ConvolutionCUDACallbacks_DC.o -lcudart -lcufft_static -lculibos
DIST_COMMON = $(top_srcdir)/config/Makefile.include \
	$(top_srcdir)/config/Makefile.cuda $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/config/depcomp \
	$(am__nobase_include_HEADERS_DIST)
subdir = Signal/General
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/ac_python_devel.m4 \
	$(top_srcdir)/config/affinity.m4 \
	$(top_srcdir)/config/ax_openmp.m4 \
	$(top_srcdir)/config/bootstrap.m4 \
	$(top_srcdir)/config/cfitsio.m4 \
	$(top_srcdir)/config/compiler.m4 \
	$(top_srcdir)/config/crypto.m4 $(top_srcdir)/config/cuda.m4 \
	$(top_srcdir)/config/debug.m4 \
	$(top_srcdir)/config/etr_socket_nsl.m4 \
	$(top_srcdir)/config/formats.m4 \
	$(top_srcdir)/config/getopt_long.m4 \
	$(top_srcdir)/config/guppi_daq.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/local.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mark5access.m4 \
	$(top_srcdir)/config/mpi.m4 $(top_srcdir)/config/package.m4 \
	$(top_srcdir)/config/pgplot.m4 \
	$(top_srcdir)/config/psrchive.m4 \
	$(top_srcdir)/config/psrdada.m4 $(top_srcdir)/config/psrxml.m4 \
	$(top_srcdir)/config/x11.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libdspdsp_la_DEPENDENCIES =
am__libdspdsp_la_SOURCES_DIST = optimize_fft.c cross_detect.c \
	cross_detect.h cross_detect.ic stokes_detect.c stokes_detect.h \
	stokes_detect.ic ACFilterbank.C TScrunch.C TimeOrder.C \
	Apodization.C AutoCorrelation.C Filterbank.C \
	IncoherentFilterbank.C Bandpass.C LevelMonitor.C RFIFilter.C \
	Chomper.C Response.C ResponseProduct.C Convolution.C \
	Dedispersion.C SampleDelay.C DedispersionHistory.C Shape.C \
	DedispersionSampleDelay.C Detection.C Rescale.C PScrunch.C \
	BandpassMonitor.C FourthMoment.C Stats.C PolnCalibration.C \
	Dump.C OptimalFFT.C FScrunch.C FilterbankBench.C \
	OptimalFilterbank.C FilterbankConfig.C FZoom.C \
	GeometricDelay.C mfilter.c TFPFilterbank.C RFIZapper.C \
	SKFilterbank.C Resize.C SKDetector.C SKMasker.C SingleThread.C \
	MultiThread.C dsp_verbosity.C PolnSelect.C PolnReshape.C \
	SpectralKurtosis.C CUFFTError.C LaunchConfig.C \
	FilterbankCUDA.cu TransferCUDA.C TransferBitSeriesCUDA.C \
	DetectionCUDA.cu SKMaskerCUDA.cu FZoomCUDA.cu FScrunchCUDA.cu \
	TScrunchCUDA.cu PScrunchCUDA.cu PolnSelectCUDA.cu \
	SpectralKurtosisCUDA.cu SKComputerCUDA.cu SKDetectorCUDA.cu \
	SKFilterbankCUDA.cu ConvolutionCUDA.cu \
	ConvolutionCUDASpectral.cu ConvolutionCUDACallbacks.cu \
	ExcisionStatsPlotter.C BitStatsPlotter.C LoadToFITS.C \
	LoadToFITSN.C LoadToFil.C LoadToFilN.C
@HAVE_CUFFT_TRUE@am__objects_1 = CUFFTError.lo LaunchConfig.lo \
@HAVE_CUFFT_TRUE@	FilterbankCUDA.lo TransferCUDA.lo \
@HAVE_CUFFT_TRUE@	TransferBitSeriesCUDA.lo DetectionCUDA.lo \
@HAVE_CUFFT_TRUE@	SKMaskerCUDA.lo FZoomCUDA.lo FScrunchCUDA.lo \
@HAVE_CUFFT_TRUE@	TScrunchCUDA.lo PScrunchCUDA.lo \
@HAVE_CUFFT_TRUE@	PolnSelectCUDA.lo SpectralKurtosisCUDA.lo \
@HAVE_CUFFT_TRUE@	SKComputerCUDA.lo SKDetectorCUDA.lo \
@HAVE_CUFFT_TRUE@	SKFilterbankCUDA.lo ConvolutionCUDA.lo \
@HAVE_CUFFT_TRUE@	ConvolutionCUDASpectral.lo \
@HAVE_CUFFT_TRUE@	ConvolutionCUDACallbacks.lo
@HAVE_PGPLOT_TRUE@am__objects_2 = ExcisionStatsPlotter.lo \
@HAVE_PGPLOT_TRUE@	BitStatsPlotter.lo
@HAVE_fits_TRUE@am__objects_3 = LoadToFITS.lo LoadToFITSN.lo
@HAVE_sigproc_TRUE@am__objects_4 = LoadToFil.lo LoadToFilN.lo
am_libdspdsp_la_OBJECTS = optimize_fft.lo cross_detect.lo \
	stokes_detect.lo ACFilterbank.lo TScrunch.lo TimeOrder.lo \
	Apodization.lo AutoCorrelation.lo Filterbank.lo \
	IncoherentFilterbank.lo Bandpass.lo LevelMonitor.lo \
	RFIFilter.lo Chomper.lo Response.lo ResponseProduct.lo \
	Convolution.lo Dedispersion.lo SampleDelay.lo \
	DedispersionHistory.lo Shape.lo DedispersionSampleDelay.lo \
	Detection.lo Rescale.lo PScrunch.lo BandpassMonitor.lo \
	FourthMoment.lo Stats.lo PolnCalibration.lo Dump.lo \
	OptimalFFT.lo FScrunch.lo FilterbankBench.lo \
	OptimalFilterbank.lo FilterbankConfig.lo FZoom.lo \
	GeometricDelay.lo mfilter.lo TFPFilterbank.lo RFIZapper.lo \
	SKFilterbank.lo Resize.lo SKDetector.lo SKMasker.lo \
	SingleThread.lo MultiThread.lo dsp_verbosity.lo PolnSelect.lo \
	PolnReshape.lo SpectralKurtosis.lo $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4)
libdspdsp_la_OBJECTS = $(am_libdspdsp_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
@HAVE_CUFFT_TRUE@am__EXEEXT_1 = fftbatch_speed$(EXEEXT)
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@am__EXEEXT_2 = cufft_callback_bench$(EXEEXT)
@HAVE_PGPLOT_TRUE@am__EXEEXT_3 = digistat$(EXEEXT) passband$(EXEEXT)
@HAVE_fits_TRUE@am__EXEEXT_4 = digifits$(EXEEXT)
@HAVE_sigproc_TRUE@am__EXEEXT_5 = digifil$(EXEEXT)
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@am__EXEEXT_6 =  \
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@	the_decimator$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
cufft_callback_bench_SOURCES = cufft_callback_bench.c
cufft_callback_bench_OBJECTS = cufft_callback_bench.$(OBJEXT)
am__DEPENDENCIES_1 = libdspdsp.la $(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@cufft_callback_bench_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@	cufft_callback_bench_DC.o
am__digifil_SOURCES_DIST = digifil.C
@HAVE_sigproc_TRUE@am_digifil_OBJECTS = digifil.$(OBJEXT)
digifil_OBJECTS = $(am_digifil_OBJECTS)
digifil_LDADD = $(LDADD)
digifil_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
am__digifits_SOURCES_DIST = digifits.C
@HAVE_fits_TRUE@am_digifits_OBJECTS = digifits.$(OBJEXT)
digifits_OBJECTS = $(am_digifits_OBJECTS)
@HAVE_fits_TRUE@digifits_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_digihist_OBJECTS = digihist.$(OBJEXT)
digihist_OBJECTS = $(am_digihist_OBJECTS)
digihist_LDADD = $(LDADD)
digihist_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
am_digimon_OBJECTS = digimon.$(OBJEXT)
digimon_OBJECTS = $(am_digimon_OBJECTS)
digimon_LDADD = $(LDADD)
digimon_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
am__digistat_SOURCES_DIST = digistat.C
@HAVE_PGPLOT_TRUE@am_digistat_OBJECTS = digistat.$(OBJEXT)
digistat_OBJECTS = $(am_digistat_OBJECTS)
@HAVE_PGPLOT_TRUE@digistat_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_digitxt_OBJECTS = digitxt.$(OBJEXT)
digitxt_OBJECTS = $(am_digitxt_OBJECTS)
digitxt_LDADD = $(LDADD)
digitxt_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
am_dmsmear_OBJECTS = dmsmear.$(OBJEXT)
dmsmear_OBJECTS = $(am_dmsmear_OBJECTS)
dmsmear_LDADD = $(LDADD)
dmsmear_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
fftbatch_speed_SOURCES = fftbatch_speed.c
fftbatch_speed_OBJECTS = fftbatch_speed.$(OBJEXT)
fftbatch_speed_LDADD = $(LDADD)
fftbatch_speed_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
am_filterbank_speed_OBJECTS = filterbank_speed.$(OBJEXT)
filterbank_speed_OBJECTS = $(am_filterbank_speed_OBJECTS)
filterbank_speed_LDADD = $(LDADD)
filterbank_speed_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
am__passband_SOURCES_DIST = passband.C
@HAVE_PGPLOT_TRUE@am_passband_OBJECTS = passband.$(OBJEXT)
passband_OBJECTS = $(am_passband_OBJECTS)
@HAVE_PGPLOT_TRUE@passband_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_test_OptimalFFT_OBJECTS = test_OptimalFFT.$(OBJEXT)
test_OptimalFFT_OBJECTS = $(am_test_OptimalFFT_OBJECTS)
test_OptimalFFT_LDADD = $(LDADD)
test_OptimalFFT_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
am_test_PolnCalibration_OBJECTS = test_PolnCalibration.$(OBJEXT)
test_PolnCalibration_OBJECTS = $(am_test_PolnCalibration_OBJECTS)
test_PolnCalibration_LDADD = $(LDADD)
test_PolnCalibration_DEPENDENCIES = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la
am__the_decimator_SOURCES_DIST = the_decimator.C
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@am_the_decimator_OBJECTS = the_decimator-the_decimator.$(OBJEXT)
the_decimator_OBJECTS = $(am_the_decimator_OBJECTS)
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@am__DEPENDENCIES_2 = ConvolutionCUDACallbacks_DC.o
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@the_decimator_DEPENDENCIES =  \
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@	$(am__DEPENDENCIES_1) \
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@	$(am__DEPENDENCIES_2)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libdspdsp_la_SOURCES) cufft_callback_bench.c \
	$(digifil_SOURCES) $(digifits_SOURCES) $(digihist_SOURCES) \
	$(digimon_SOURCES) $(digistat_SOURCES) $(digitxt_SOURCES) \
	$(dmsmear_SOURCES) fftbatch_speed.c \
	$(filterbank_speed_SOURCES) $(passband_SOURCES) \
	$(test_OptimalFFT_SOURCES) $(test_PolnCalibration_SOURCES) \
	$(the_decimator_SOURCES)
DIST_SOURCES = $(am__libdspdsp_la_SOURCES_DIST) cufft_callback_bench.c \
	$(am__digifil_SOURCES_DIST) $(am__digifits_SOURCES_DIST) \
	$(digihist_SOURCES) $(digimon_SOURCES) \
	$(am__digistat_SOURCES_DIST) $(digitxt_SOURCES) \
	$(dmsmear_SOURCES) fftbatch_speed.c \
	$(filterbank_speed_SOURCES) $(am__passband_SOURCES_DIST) \
	$(test_OptimalFFT_SOURCES) $(test_PolnCalibration_SOURCES) \
	$(am__the_decimator_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__nobase_include_HEADERS_DIST = dsp/ACFilterbank.h dsp/Detection.h \
	dsp/ResponseProduct.h dsp/Accumulator.h dsp/Apodization.h \
	dsp/SampleDelay.h dsp/AutoCorrelation.h \
	dsp/SampleDelayFunction.h dsp/Example.h dsp/Shape.h \
	dsp/Bandpass.h dsp/Simultaneous.h dsp/Stats.h dsp/Filterbank.h \
	dsp/BitStatsPlotter.h dsp/Switcher.h dsp/Buffer.h \
	dsp/IncoherentFilterbank.h dsp/TScrunch.h dsp/LevelHistory.h \
	dsp/TimeOrder.h dsp/Chomper.h dsp/LevelMonitor.h \
	dsp/ExcisionHistoryPlotter.h dsp/ExcisionStatsPlotter.h \
	dsp/Convolution.h dsp/Dedispersion.h dsp/DedispersionHistory.h \
	dsp/RFIFilter.h dsp/DedispersionSampleDelay.h dsp/Response.h \
	dsp/Rescale.h dsp/BandpassMonitor.h dsp/PScrunch.h \
	dsp/FourthMoment.h dsp/PolnCalibration.h dsp/Dump.h \
	dsp/OptimalFFT.h dsp/OptimalFilterbank.h dsp/on_host.h \
	dsp/FScrunch.h dsp/FilterbankBench.h dsp/FilterbankConfig.h \
	dsp/FilterbankEngine.h dsp/filterbank_engine.h dsp/FZoom.h \
	dsp/GeometricDelay.h dsp/TFPFilterbank.h dsp/RFIZapper.h \
	dsp/SKFilterbank.h dsp/Resize.h dsp/SKDetector.h \
	dsp/SKMasker.h dsp/Pipeline.h dsp/SingleThread.h \
	dsp/MultiThread.h dsp/PolnSelect.h dsp/PolnReshape.h \
	dsp/SpectralKurtosis.h dsp/SKComputer.h CUFFTError.h \
	dsp/LaunchConfig.h dsp/FilterbankCUDA.h dsp/filterbank_cuda.h \
	dsp/TransferCUDA.h dsp/TransferBitSeriesCUDA.h \
	dsp/SKMaskerCUDA.h dsp/DetectionCUDA.h dsp/FZoomCUDA.h \
	dsp/FScrunchCUDA.h dsp/TScrunchCUDA.h dsp/PScrunchCUDA.h \
	dsp/PolnSelectCUDA.h dsp/ConvolutionCUDA.h \
	dsp/ConvolutionCUDASpectral.h dsp/ConvolutionCUDACallbacks.h \
	dsp/SpectralKurtosisCUDA.h dsp/SKComputerCUDA.h \
	dsp/SKDetectorCUDA.h dsp/SKFilterbankCUDA.h dsp/LoadToFITS.h \
	dsp/LoadToFITSN.h dsp/LoadToFil.h dsp/LoadToFilN.h
HEADERS = $(nobase_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFITSIO_CFLAGS = @CFITSIO_CFLAGS@
CFITSIO_LIBS = @CFITSIO_LIBS@
CFLAGS = @CFLAGS@
CONFIG_STATUS_DEPENDENCIES = @CONFIG_STATUS_DEPENDENCIES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CUDA_CFLAGS = @CUDA_CFLAGS@
CUDA_LIBS = @CUDA_LIBS@
CUDA_NVCC = @CUDA_NVCC@
CUDA_NVCC_FLAGS = @CUDA_NVCC_FLAGS@
CUFFT_CALLBACKS_CFLAGS = @CUFFT_CALLBACKS_CFLAGS@
CUFFT_CALLBACKS_LIBS = @CUFFT_CALLBACKS_LIBS@
CUFFT_CFLAGS = @CUFFT_CFLAGS@
CUFFT_LIBS = @CUFFT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLIBS = @FLIBS@
GREP = @GREP@
GUPPI_DAQ_CFLAGS = @GUPPI_DAQ_CFLAGS@
GUPPI_DAQ_LIBS = @GUPPI_DAQ_LIBS@
INCLUDE_CPPFLAGS = @INCLUDE_CPPFLAGS@
INCLUDE_LDFLAGS = @INCLUDE_LDFLAGS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOGIN_ARCH = @LOGIN_ARCH@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MARK5ACCESS_CFLAGS = @MARK5ACCESS_CFLAGS@
MARK5ACCESS_LIBS = @MARK5ACCESS_LIBS@
MKDIR_P = @MKDIR_P@
MPI_CFLAGS = @MPI_CFLAGS@
MPI_LIBS = @MPI_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_CFLAGS = @OPENMP_CFLAGS@
OPENSSL_LIBS = @OPENSSL_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGES = @PACKAGES@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PGPLOT_CFLAGS = @PGPLOT_CFLAGS@
PGPLOT_LIBS = @PGPLOT_LIBS@
PSRCHIVE_ACLOCAL = @PSRCHIVE_ACLOCAL@
PSRCHIVE_CFLAGS = @PSRCHIVE_CFLAGS@
PSRCHIVE_CPPFLAGS = @PSRCHIVE_CPPFLAGS@
PSRCHIVE_INCLUDE = @PSRCHIVE_INCLUDE@
PSRCHIVE_LIBS = @PSRCHIVE_LIBS@
PSRDADA_CFLAGS = @PSRDADA_CFLAGS@
PSRDADA_LIBS = @PSRDADA_LIBS@
PSRHOME = @PSRHOME@
PSRPLOT_LIBS = @PSRPLOT_LIBS@
PSRXML_CFLAGS = @PSRXML_CFLAGS@
PSRXML_LIBS = @PSRXML_LIBS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOCKET_LIBS = @SOCKET_LIBS@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIG_PYTHON_CPPFLAGS = @SWIG_PYTHON_CPPFLAGS@
SWIG_PYTHON_OPT = @SWIG_PYTHON_OPT@
VERSION = @VERSION@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cuda_nvcc = @cuda_nvcc@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
psrchive_config = @psrchive_config@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LTLIBRARIES = libdspdsp.la
nobase_include_HEADERS = dsp/ACFilterbank.h dsp/Detection.h \
	dsp/ResponseProduct.h dsp/Accumulator.h dsp/Apodization.h \
	dsp/SampleDelay.h dsp/AutoCorrelation.h \
	dsp/SampleDelayFunction.h dsp/Example.h dsp/Shape.h \
	dsp/Bandpass.h dsp/Simultaneous.h dsp/Stats.h dsp/Filterbank.h \
	dsp/BitStatsPlotter.h dsp/Switcher.h dsp/Buffer.h \
	dsp/IncoherentFilterbank.h dsp/TScrunch.h dsp/LevelHistory.h \
	dsp/TimeOrder.h dsp/Chomper.h dsp/LevelMonitor.h \
	dsp/ExcisionHistoryPlotter.h dsp/ExcisionStatsPlotter.h \
	dsp/Convolution.h dsp/Dedispersion.h dsp/DedispersionHistory.h \
	dsp/RFIFilter.h dsp/DedispersionSampleDelay.h dsp/Response.h \
	dsp/Rescale.h dsp/BandpassMonitor.h dsp/PScrunch.h \
	dsp/FourthMoment.h dsp/PolnCalibration.h dsp/Dump.h \
	dsp/OptimalFFT.h dsp/OptimalFilterbank.h dsp/on_host.h \
	dsp/FScrunch.h dsp/FilterbankBench.h dsp/FilterbankConfig.h \
	dsp/FilterbankEngine.h dsp/filterbank_engine.h dsp/FZoom.h \
	dsp/GeometricDelay.h dsp/TFPFilterbank.h dsp/RFIZapper.h \
	dsp/SKFilterbank.h dsp/Resize.h dsp/SKDetector.h \
	dsp/SKMasker.h dsp/Pipeline.h dsp/SingleThread.h \
	dsp/MultiThread.h dsp/PolnSelect.h dsp/PolnReshape.h \
	dsp/SpectralKurtosis.h dsp/SKComputer.h $(am__append_1) \
	$(am__append_7) $(am__append_10)
libdspdsp_la_SOURCES = optimize_fft.c cross_detect.c cross_detect.h \
	cross_detect.ic stokes_detect.c stokes_detect.h \
	stokes_detect.ic ACFilterbank.C TScrunch.C TimeOrder.C \
	Apodization.C AutoCorrelation.C Filterbank.C \
	IncoherentFilterbank.C Bandpass.C LevelMonitor.C RFIFilter.C \
	Chomper.C Response.C ResponseProduct.C Convolution.C \
	Dedispersion.C SampleDelay.C DedispersionHistory.C Shape.C \
	DedispersionSampleDelay.C Detection.C Rescale.C PScrunch.C \
	BandpassMonitor.C FourthMoment.C Stats.C PolnCalibration.C \
	Dump.C OptimalFFT.C FScrunch.C FilterbankBench.C \
	OptimalFilterbank.C FilterbankConfig.C FZoom.C \
	GeometricDelay.C mfilter.c TFPFilterbank.C RFIZapper.C \
	SKFilterbank.C Resize.C SKDetector.C SKMasker.C SingleThread.C \
	MultiThread.C dsp_verbosity.C PolnSelect.C PolnReshape.C \
	SpectralKurtosis.C $(am__append_2) $(am__append_5) \
	$(am__append_8) $(am__append_11)
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@cufft_callback_bench_LDADD = $(LDADD) cufft_callback_bench_DC.o -lcudart -lcufft_static -lculibos
dmsmear_SOURCES = dmsmear.C 
digitxt_SOURCES = digitxt.C
digimon_SOURCES = digimon.C
digihist_SOURCES = digihist.C
filterbank_speed_SOURCES = filterbank_speed.C
test_PolnCalibration_SOURCES = test_PolnCalibration.C
test_OptimalFFT_SOURCES = test_OptimalFFT.C
@HAVE_PGPLOT_TRUE@libdspdsp_la_LIBADD = @PGPLOT_LIBS@
@HAVE_fits_TRUE@libdspdsp_la_LIBADD = @CFITSIO_LIBS@
@HAVE_PGPLOT_TRUE@digistat_SOURCES = digistat.C
@HAVE_PGPLOT_TRUE@digistat_LDADD = @PSRPLOT_LIBS@ $(LDADD)
@HAVE_PGPLOT_TRUE@passband_SOURCES = passband.C
@HAVE_PGPLOT_TRUE@passband_LDADD = @PSRPLOT_LIBS@ $(LDADD)
@HAVE_fits_TRUE@digifits_SOURCES = digifits.C
@HAVE_fits_TRUE@digifits_LDADD = @CFITSIO_LIBS@ $(LDADD)
@HAVE_sigproc_TRUE@digifil_SOURCES = digifil.C
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@the_decimator_SOURCES = the_decimator.C
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@the_decimator_LDADD = $(LDADD) \
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@	@OPENSSL_LIBS@ \
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@	@PSRXML_LIBS@ \
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@	@PSRDADA_LIBS@ \
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@	$(am__append_14)
@HAVE_dada_TRUE@@HAVE_sigproc_TRUE@the_decimator_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS) @PSRXML_CFLAGS@ @PSRDADA_CFLAGS@
local_includedir = $(top_builddir)/local_include
LOCAL_INCLUDE = $(addprefix $(local_includedir)/, $(HEADERS))
CLEANFILES = $(LOCAL_INCLUDE) $(MOC_SOURCES) $(BUILT_SOURCES)
AM_CPPFLAGS = -I$(local_includedir) $(INCLUDE_CPPFLAGS) \
	@PGPLOT_CFLAGS@ @CUFFT_CFLAGS@ @CFITSIO_CFLAGS@ $(am__empty)
AM_LDFLAGS = $(INCLUDE_LDFLAGS)

#############################################################################
#
LDADD = libdspdsp.la \
	$(top_builddir)/Kernel/libdspbase.la \
	$(top_builddir)/Signal/Statistics/libdspstats.la \
	@PGPLOT_LIBS@ @CUDA_LIBS@ @CUFFT_LIBS@

AM_CXXFLAGS = @OPENMP_CFLAGS@
all: all-am

.SUFFIXES:
.SUFFIXES: .C .c .cu .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.include $(top_srcdir)/config/Makefile.cuda $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Signal/General/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Signal/General/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/Makefile.include $(top_srcdir)/config/Makefile.cuda:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libdspdsp.la: $(libdspdsp_la_OBJECTS) $(libdspdsp_la_DEPENDENCIES) $(EXTRA_libdspdsp_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libdspdsp_la_OBJECTS) $(libdspdsp_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

cufft_callback_bench$(EXEEXT): $(cufft_callback_bench_OBJECTS) $(cufft_callback_bench_DEPENDENCIES) $(EXTRA_cufft_callback_bench_DEPENDENCIES) 
	@rm -f cufft_callback_bench$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cufft_callback_bench_OBJECTS) $(cufft_callback_bench_LDADD) $(LIBS)

digifil$(EXEEXT): $(digifil_OBJECTS) $(digifil_DEPENDENCIES) $(EXTRA_digifil_DEPENDENCIES) 
	@rm -f digifil$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(digifil_OBJECTS) $(digifil_LDADD) $(LIBS)

digifits$(EXEEXT): $(digifits_OBJECTS) $(digifits_DEPENDENCIES) $(EXTRA_digifits_DEPENDENCIES) 
	@rm -f digifits$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(digifits_OBJECTS) $(digifits_LDADD) $(LIBS)

digihist$(EXEEXT): $(digihist_OBJECTS) $(digihist_DEPENDENCIES) $(EXTRA_digihist_DEPENDENCIES) 
	@rm -f digihist$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(digihist_OBJECTS) $(digihist_LDADD) $(LIBS)

digimon$(EXEEXT): $(digimon_OBJECTS) $(digimon_DEPENDENCIES) $(EXTRA_digimon_DEPENDENCIES) 
	@rm -f digimon$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(digimon_OBJECTS) $(digimon_LDADD) $(LIBS)

digistat$(EXEEXT): $(digistat_OBJECTS) $(digistat_DEPENDENCIES) $(EXTRA_digistat_DEPENDENCIES) 
	@rm -f digistat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(digistat_OBJECTS) $(digistat_LDADD) $(LIBS)

digitxt$(EXEEXT): $(digitxt_OBJECTS) $(digitxt_DEPENDENCIES) $(EXTRA_digitxt_DEPENDENCIES) 
	@rm -f digitxt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(digitxt_OBJECTS) $(digitxt_LDADD) $(LIBS)

dmsmear$(EXEEXT): $(dmsmear_OBJECTS) $(dmsmear_DEPENDENCIES) $(EXTRA_dmsmear_DEPENDENCIES) 
	@rm -f dmsmear$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dmsmear_OBJECTS) $(dmsmear_LDADD) $(LIBS)

fftbatch_speed$(EXEEXT): $(fftbatch_speed_OBJECTS) $(fftbatch_speed_DEPENDENCIES) $(EXTRA_fftbatch_speed_DEPENDENCIES) 
	@rm -f fftbatch_speed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fftbatch_speed_OBJECTS) $(fftbatch_speed_LDADD) $(LIBS)

filterbank_speed$(EXEEXT): $(filterbank_speed_OBJECTS) $(filterbank_speed_DEPENDENCIES) $(EXTRA_filterbank_speed_DEPENDENCIES) 
	@rm -f filterbank_speed$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(filterbank_speed_OBJECTS) $(filterbank_speed_LDADD) $(LIBS)

passband$(EXEEXT): $(passband_OBJECTS) $(passband_DEPENDENCIES) $(EXTRA_passband_DEPENDENCIES) 
	@rm -f passband$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(passband_OBJECTS) $(passband_LDADD) $(LIBS)

test_OptimalFFT$(EXEEXT): $(test_OptimalFFT_OBJECTS) $(test_OptimalFFT_DEPENDENCIES) $(EXTRA_test_OptimalFFT_DEPENDENCIES) 
	@rm -f test_OptimalFFT$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_OptimalFFT_OBJECTS) $(test_OptimalFFT_LDADD) $(LIBS)

test_PolnCalibration$(EXEEXT): $(test_PolnCalibration_OBJECTS) $(test_PolnCalibration_DEPENDENCIES) $(EXTRA_test_PolnCalibration_DEPENDENCIES) 
	@rm -f test_PolnCalibration$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PolnCalibration_OBJECTS) $(test_PolnCalibration_LDADD) $(LIBS)

the_decimator$(EXEEXT): $(the_decimator_OBJECTS) $(the_decimator_DEPENDENCIES) $(EXTRA_the_decimator_DEPENDENCIES) 
	@rm -f the_decimator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(the_decimator_OBJECTS) $(the_decimator_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ACFilterbank.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Apodization.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AutoCorrelation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bandpass.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BandpassMonitor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitStatsPlotter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CUFFTError.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Chomper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Convolution.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Dedispersion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DedispersionHistory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DedispersionSampleDelay.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Detection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Dump.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExcisionStatsPlotter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FScrunch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FZoom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Filterbank.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FilterbankBench.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FilterbankConfig.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FourthMoment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GeometricDelay.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IncoherentFilterbank.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LaunchConfig.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LevelMonitor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LoadToFITS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LoadToFITSN.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LoadToFil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LoadToFilN.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MultiThread.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OptimalFFT.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OptimalFilterbank.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PScrunch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PolnCalibration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PolnReshape.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PolnSelect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RFIFilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RFIZapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rescale.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Resize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Response.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ResponseProduct.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SKDetector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SKFilterbank.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SKMasker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SampleDelay.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Shape.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SingleThread.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpectralKurtosis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Stats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TFPFilterbank.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TScrunch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TimeOrder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TransferBitSeriesCUDA.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TransferCUDA.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cross_detect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cufft_callback_bench.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digifil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digifits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digihist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digimon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digistat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digitxt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dmsmear.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dsp_verbosity.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fftbatch_speed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filterbank_speed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/optimize_fft.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/passband.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stokes_detect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_OptimalFFT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PolnCalibration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/the_decimator-the_decimator.Po@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

the_decimator-the_decimator.o: the_decimator.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(the_decimator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT the_decimator-the_decimator.o -MD -MP -MF $(DEPDIR)/the_decimator-the_decimator.Tpo -c -o the_decimator-the_decimator.o `test -f 'the_decimator.C' || echo '$(srcdir)/'`the_decimator.C
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/the_decimator-the_decimator.Tpo $(DEPDIR)/the_decimator-the_decimator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='the_decimator.C' object='the_decimator-the_decimator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(the_decimator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o the_decimator-the_decimator.o `test -f 'the_decimator.C' || echo '$(srcdir)/'`the_decimator.C

the_decimator-the_decimator.obj: the_decimator.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(the_decimator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT the_decimator-the_decimator.obj -MD -MP -MF $(DEPDIR)/the_decimator-the_decimator.Tpo -c -o the_decimator-the_decimator.obj `if test -f 'the_decimator.C'; then $(CYGPATH_W) 'the_decimator.C'; else $(CYGPATH_W) '$(srcdir)/the_decimator.C'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/the_decimator-the_decimator.Tpo $(DEPDIR)/the_decimator-the_decimator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='the_decimator.C' object='the_decimator-the_decimator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(the_decimator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o the_decimator-the_decimator.obj `if test -f 'the_decimator.C'; then $(CYGPATH_W) 'the_decimator.C'; else $(CYGPATH_W) '$(srcdir)/the_decimator.C'; fi`

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) all-local
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-nobase_includeHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-nobase_includeHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES uninstall-nobase_includeHEADERS


@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@cufft_callback_bench_DC.o: cufft_callback_bench.o
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@	$(CUDA_NVCC) -o cufft_callback_bench_DC.o -dlink cufft_callback_bench.o -lcufft_static

@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@ConvolutionCUDACallbacks.lo: ConvolutionCUDACallbacks.cu
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@	$(top_srcdir)/config/cudalt.py $(top_builddir)/libtool $@ $(CUDA_NVCC) -dc -c $<
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@	$(CUDA_NVCC) -o ConvolutionCUDACallbacks_DC.o -dlink ConvolutionCUDACallbacks.o -lcufft_static

@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@cufft_callback_bench.lo: cufft_callback_bench.cu
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@	$(top_srcdir)/config/cudalt.py $(top_builddir)/libtool $@ $(CUDA_NVCC) -dc -c $<
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_CUFFT_TRUE@	$(CUDA_NVCC) -o cufft_callback_bench_DC.o -dlink cufft_callback_bench.o -lcufft_static

@HAVE_PGPLOT_TRUE@  ###########################################################################
@HAVE_PGPLOT_TRUE@  #
@HAVE_PGPLOT_TRUE@  # start PGPLOT-specific code
@HAVE_PGPLOT_TRUE@  #

@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_PGPLOT_TRUE@	digistat_LDADD += ConvolutionCUDACallbacks_DC.o -lcudart -lcufft_static -lculibos
@HAVE_CUFFT_CALLBACKS_TRUE@@HAVE_PGPLOT_TRUE@	passband_LDADD += ConvolutionCUDACallbacks_DC.o -lcudart -lcufft_static -lculibos
@HAVE_PGPLOT_TRUE@  #
@HAVE_PGPLOT_TRUE@  # end PGPLOT-specific code
@HAVE_PGPLOT_TRUE@  #
@HAVE_PGPLOT_TRUE@  ###########################################################################

@HAVE_fits_TRUE@  ##########################################################################
@HAVE_fits_TRUE@  #
@HAVE_fits_TRUE@  # start PSRFITS-specific code
@HAVE_fits_TRUE@  #

@HAVE_fits_TRUE@  #
@HAVE_fits_TRUE@  # end PSRFITS-specific code
@HAVE_fits_TRUE@  #
@HAVE_fits_TRUE@  ##########################################################################

@HAVE_sigproc_TRUE@  ###########################################################################
@HAVE_sigproc_TRUE@  #
@HAVE_sigproc_TRUE@  # start sigproc-specific code
@HAVE_sigproc_TRUE@  #

@HAVE_sigproc_TRUE@  #
@HAVE_sigproc_TRUE@  # end sigproc-specific code
@HAVE_sigproc_TRUE@  #
@HAVE_sigproc_TRUE@  ###########################################################################

all-local: $(LOCAL_INCLUDE)

$(LOCAL_INCLUDE) : $(local_includedir)/% : %
	@$(SHELL) $(top_srcdir)/config/install-intermediate $< $@

###########################################################################
#
# Rules for making PDF from LaTeX
#
###########################################################################

#
# convert Postscript to Abobe Acrobat Portable Document Format
#
%.pdf: %.ps
	ps2pdf $<

#
# convert dvi file format to Postscript using Adobe safe ligatures
#
%.ps: %.dvi
	dvips -Ppdf -G0 -o $@ $<

#
# generate dvi file from LaTeX input
#
%.dvi: $(srcdir)/%.tex
# Get new refs
	latex $<
# Generate tex for em
	bibtex $* ; date
# Tell latex about them
	latex $<
# Second pass to fix cross-references
	latex $<

.cu.o:
	$(CUDA_NVCC) -o $@ -c $<

.cu.lo:
	$(top_srcdir)/config/cudalt.py $(top_builddir)/libtool $@ $(CUDA_NVCC) -c $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
